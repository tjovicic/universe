name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CUE_VERSION: v0.4.0
  DAGGER_VERSION: v0.1.0-alpha.24

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16

      - name: Install Cue
        run: |
          export CUE_TARBALL="cue_${CUE_VERSION}_linux_amd64.tar.gz"
          echo "Installing cue version $CUE_VERSION"
          curl -L https://github.com/cuelang/cue/releases/download/${CUE_VERSION}/${CUE_TARBALL} | sudo tar zxf - -C /usr/local/bin

      - name: Go Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.39
          skip-go-installation: true
          args: --timeout=3m

      - name: Lint
        run: |
          make shellcheck cuelint

  integration:
    name: Integration
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16

      - name: Install Sops
        run: |
          sudo curl -L -o /usr/local/bin/sops https://github.com/mozilla/sops/releases/download/v3.7.1/sops-v3.7.1.linux
          sudo chmod +x /usr/local/bin/sops

      - name: Install Cue
        run: |
          export CUE_TARBALL="cue_${CUE_VERSION}_linux_amd64.tar.gz"
          echo "Installing cue version $CUE_VERSION"
          curl -L https://github.com/cuelang/cue/releases/download/${CUE_VERSION}/${CUE_TARBALL} | sudo tar zxf - -C /usr/local/bin

      - name: Install Dagger
        run: |
          export DAGGER_TARBALL="dagger_${DAGGER_VERSION}_linux_amd64.tar.gz"
          echo "Installing dagger version $DAGGER_VERSION"
          curl -L https://github.com/dagger/dagger/releases/download/${DAGGER_VERSION}/${DAGGER_TARBALL} | sudo tar zxf - -C /usr/local/bin

      - name: Import Dagger private key
        env:
          DAGGER_AGE_KEY: ${{ secrets.DAGGER_AGE_KEY }}
        run: |
          mkdir -p ~/.config/dagger
          echo "$DAGGER_AGE_KEY" > ~/.config/dagger/keys.txt

      - name: Integration test
        run: |
          make core-integration

  universe:
    name: Universe
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      localstack:
        image: localstack/localstack:0.12.16
        env:
          SERVICES: s3, ecr
          LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }}
        ports:
          - 4566:4566
          - 4571:4571
          - 4510:4510
        options: >-
          --health-cmd "curl -f http://localhost:4566/health"
          --health-start-period 5s
          --health-timeout 5s
          --health-interval 5s
          --health-retries 10 

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16

      - name: Setup Kind Kubernetes Cluster
        uses: helm/kind-action@v1.2.0

      - name: Install Cue
        run: |
          export CUE_TARBALL="cue_${CUE_VERSION}_linux_amd64.tar.gz"
          echo "Installing cue version $CUE_VERSION"
          curl -L https://github.com/cuelang/cue/releases/download/${CUE_VERSION}/${CUE_TARBALL} | sudo tar zxf - -C /usr/local/bin

      - name: Install Dagger
        run: |
          export DAGGER_TARBALL="dagger_${DAGGER_VERSION}_linux_amd64.tar.gz"
          echo "Installing dagger version $DAGGER_VERSION"
          curl -L https://github.com/dagger/dagger/releases/download/${DAGGER_VERSION}/${DAGGER_TARBALL} | sudo tar zxf - -C /usr/local/bin

      - name: Import Dagger private key
        env:
          DAGGER_AGE_KEY: ${{ secrets.DAGGER_AGE_KEY }}
        run: |
          mkdir -p ~/.config/dagger
          echo "$DAGGER_AGE_KEY" > ~/.config/dagger/keys.txt
       
      - name: Provision Localstack AWS resources
        env:
            AWS_ACCESS_KEY_ID: test
            AWS_SECRET_ACCESS_KEY: test
            AWS_DEFAULT_REGION: us-east-2
        run: |
          aws --endpoint-url=http://localhost:4566 s3 mb s3://dagger-ci
          aws --endpoint-url=http://localhost:4566 ecr create-repository --repository-name dagger-ci
      
      - name: Universe Test
        run: |
          make universe-test


